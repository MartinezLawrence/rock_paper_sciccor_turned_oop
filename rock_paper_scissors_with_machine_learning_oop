# Rock Paper Scissors Ultimate Game with Machine Learning

# make a class that implements the game with machine learning 
# Attributes:
# stats: tracks wins, losses, ties for each mode
# transition_matrix: stores user move patterns for prediction
# hidden_found: flag for hidden mode
# modes: dictionary of game modes and their choices
# win_conditions: rules for winning in each mode

# Method: get_valid_input(prompt, valid_range, exit_code)
# Loop:
# Prompt user for input
# If input is valid or is exit code, return it
# Else, show error and repeat

# Method: check_win(user_choice, machine_choice, mode)
# Determine what choices user beats (win_against) based on mode
# If machine_choice in win_against: user wins, update stats
# Else if tie: update stats
# Else: user loses, update stats
# Return result string ("Win!", "Tied!", "Lose!")

# Method: get_machine_choice(mode, user_choice, prev_choice, result, ...)
# If mode is Easy: return random choice
# If Intermediate:
# If user repeats choice > 3 times: counter their pattern
# If user has > 3 wins: copy their previous choice
# Else: random choice
# If Expert/Big Bang:
# If prev_choice exists: update transition matrix, predict next move
# Else: random choice
# If Super Hard: always pick move that beats user_choice

# Method: update_transition_matrix(prev_choice, current_choice, result, mode)
# Update transition count for (prev_choice, current_choice, result) in matrix